{
  "info": {
    "name": "Berry & Blocks POS API",
    "description": "Complete API collection for Berry & Blocks POS System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "tenant_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "outlet_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "category_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "dish_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "table_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "order_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "payment_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["health"]
        },
        "description": "Check if the server is running"
      }
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.data.tokens.accessToken);",
                  "    pm.environment.set('tenant_id', response.data.user.tenantId);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@restaurant.com\",\n  \"password\": \"Admin123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"9876543210\",\n  \"role\": \"admin\",\n  \"tenantId\": \"{{tenant_id}}\",\n  \"outletId\": \"{{outlet_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.data.tokens.accessToken);",
                  "    pm.environment.set('refresh_token', response.data.tokens.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@restaurant.com\",\n  \"password\": \"Admin123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh-token",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh-token"]
            }
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@restaurant.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            }
          }
        },
        {
          "name": "Enable 2FA",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/enable-2fa",
              "host": ["{{base_url}}"],
              "path": ["auth", "enable-2fa"]
            }
          }
        }
      ]
    },
    {
      "name": "Tenants",
      "item": [
        {
          "name": "Create Tenant (Company)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('tenant_id', response.data._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"company\",\n  \"name\": \"Restaurant Group Inc\",\n  \"contactInfo\": {\n    \"email\": \"admin@restaurantgroup.com\",\n    \"phone\": \"9876543210\",\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Mumbai\",\n      \"state\": \"Maharashtra\",\n      \"country\": \"India\",\n      \"zipCode\": \"400001\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/tenants",
              "host": ["{{base_url}}"],
              "path": ["tenants"]
            }
          }
        },
        {
          "name": "Create Tenant (Outlet)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('outlet_id', response.data._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"outlet\",\n  \"name\": \"My Restaurant\",\n  \"contactInfo\": {\n    \"email\": \"contact@myrestaurant.com\",\n    \"phone\": \"9876543210\",\n    \"address\": {\n      \"street\": \"456 Food Street\",\n      \"city\": \"Mumbai\",\n      \"state\": \"Maharashtra\",\n      \"country\": \"India\",\n      \"zipCode\": \"400053\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/tenants",
              "host": ["{{base_url}}"],
              "path": ["tenants"]
            }
          }
        },
        {
          "name": "Get Tenant",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tenants/{{tenant_id}}",
              "host": ["{{base_url}}"],
              "path": ["tenants", "{{tenant_id}}"]
            }
          }
        },
        {
          "name": "Get Tenant Hierarchy",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tenants/{{tenant_id}}/hierarchy",
              "host": ["{{base_url}}"],
              "path": ["tenants", "{{tenant_id}}", "hierarchy"]
            }
          }
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Create Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('category_id', response.data._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Starters\",\n  \"description\": \"Appetizers and starters\",\n  \"kitchenSection\": \"kitchen\",\n  \"displayOrder\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            }
          }
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            }
          }
        },
        {
          "name": "Get Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            }
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Appetizers\",\n  \"displayOrder\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Dishes",
      "item": [
        {
          "name": "Create Dish",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('dish_id', response.data._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outletId\": \"{{outlet_id}}\",\n  \"name\": \"Paneer Tikka\",\n  \"description\": {\n    \"short\": \"Grilled cottage cheese\",\n    \"detailed\": \"Marinated cottage cheese grilled to perfection\"\n  },\n  \"categoryId\": \"{{category_id}}\",\n  \"price\": 250,\n  \"dietaryTags\": [\"veg\"],\n  \"allergens\": [\"dairy\"],\n  \"ingredients\": [\"paneer\", \"yogurt\", \"spices\"],\n  \"prepTime\": 20,\n  \"stock\": 50,\n  \"taxRate\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/dishes",
              "host": ["{{base_url}}"],
              "path": ["dishes"]
            }
          }
        },
        {
          "name": "Get All Dishes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/dishes?outletId={{outlet_id}}",
              "host": ["{{base_url}}"],
              "path": ["dishes"],
              "query": [{"key": "outletId", "value": "{{outlet_id}}"}]
            }
          }
        },
        {
          "name": "Search Dishes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/dishes/search?query=paneer&dietaryTags=veg",
              "host": ["{{base_url}}"],
              "path": ["dishes", "search"],
              "query": [
                {"key": "query", "value": "paneer"},
                {"key": "dietaryTags", "value": "veg"}
              ]
            }
          }
        },
        {
          "name": "Get Dish",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/dishes/{{dish_id}}",
              "host": ["{{base_url}}"],
              "path": ["dishes", "{{dish_id}}"]
            }
          }
        },
        {
          "name": "Update Dish",
          "request": {
            "method": "PUT",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"price\": 275,\n  \"stock\": 45\n}"
            },
            "url": {
              "raw": "{{base_url}}/dishes/{{dish_id}}",
              "host": ["{{base_url}}"],
              "path": ["dishes", "{{dish_id}}"]
            }
          }
        },
        {
          "name": "Update Stock",
          "request": {
            "method": "PATCH",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 10,\n  \"operation\": \"increment\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/dishes/{{dish_id}}/stock",
              "host": ["{{base_url}}"],
              "path": ["dishes", "{{dish_id}}", "stock"]
            }
          }
        }
      ]
    },
    {
      "name": "Tables",
      "item": [
        {
          "name": "Create Table",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('table_id', response.data._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outletId\": \"{{outlet_id}}\",\n  \"tableNumber\": \"T1\",\n  \"capacity\": 4,\n  \"section\": \"Main Hall\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/tables",
              "host": ["{{base_url}}"],
              "path": ["tables"]
            }
          }
        },
        {
          "name": "Get All Tables",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tables?outletId={{outlet_id}}",
              "host": ["{{base_url}}"],
              "path": ["tables"],
              "query": [{"key": "outletId", "value": "{{outlet_id}}"}]
            }
          }
        },
        {
          "name": "Get Table",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tables/{{table_id}}",
              "host": ["{{base_url}}"],
              "path": ["tables", "{{table_id}}"]
            }
          }
        },
        {
          "name": "Get Table QR Code",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tables/{{table_id}}/qr",
              "host": ["{{base_url}}"],
              "path": ["tables", "{{table_id}}", "qr"]
            }
          }
        },
        {
          "name": "Update Table Status",
          "request": {
            "method": "PATCH",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"occupied\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/tables/{{table_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["tables", "{{table_id}}", "status"]
            }
          }
        },
        {
          "name": "Transfer Order",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fromTableId\": \"{{table_id}}\",\n  \"toTableId\": \"<another_table_id>\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/tables/transfer",
              "host": ["{{base_url}}"],
              "path": ["tables", "transfer"]
            }
          }
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('order_id', response.data._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"outletId\": \"{{outlet_id}}\",\n  \"tableId\": \"{{table_id}}\",\n  \"orderType\": \"dine-in\",\n  \"items\": [\n    {\n      \"dishId\": \"{{dish_id}}\",\n      \"quantity\": 2,\n      \"customization\": \"Less spicy\"\n    }\n  ],\n  \"specialInstructions\": \"Customer prefers less oil\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders?outletId={{outlet_id}}",
              "host": ["{{base_url}}"],
              "path": ["orders"],
              "query": [{"key": "outletId", "value": "{{outlet_id}}"}]
            }
          }
        },
        {
          "name": "Get Order",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}"]
            }
          }
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PATCH",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}", "status"]
            }
          }
        },
        {
          "name": "Generate KOT",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}/kot",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}", "kot"]
            }
          }
        },
        {
          "name": "Get Orders by Table",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders/table/{{table_id}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "table", "{{table_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "KOT",
      "item": [
        {
          "name": "Get All KOTs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/kots?outletId={{outlet_id}}&status=pending",
              "host": ["{{base_url}}"],
              "path": ["kots"],
              "query": [
                {"key": "outletId", "value": "{{outlet_id}}"},
                {"key": "status", "value": "pending"}
              ]
            }
          }
        },
        {
          "name": "Update KOT Status",
          "request": {
            "method": "PATCH",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"preparing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/kots/<kot_id>/status",
              "host": ["{{base_url}}"],
              "path": ["kots", "<kot_id>", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "Create Payment (Cash)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('payment_id', response.data._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{order_id}}\",\n  \"amount\": 500,\n  \"paymentMethods\": [\n    {\n      \"method\": \"cash\",\n      \"amount\": 500\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/payments",
              "host": ["{{base_url}}"],
              "path": ["payments"]
            }
          }
        },
        {
          "name": "Create Split Payment",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{order_id}}\",\n  \"paymentMethods\": [\n    {\n      \"method\": \"cash\",\n      \"amount\": 300\n    },\n    {\n      \"method\": \"card\",\n      \"amount\": 200,\n      \"transactionId\": \"TXN123456\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/payments/split",
              "host": ["{{base_url}}"],
              "path": ["payments", "split"]
            }
          }
        },
        {
          "name": "Create Razorpay Order",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{order_id}}\",\n  \"amount\": 500\n}"
            },
            "url": {
              "raw": "{{base_url}}/payments/razorpay/create-order",
              "host": ["{{base_url}}"],
              "path": ["payments", "razorpay", "create-order"]
            }
          }
        },
        {
          "name": "Verify Razorpay Payment",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"razorpayOrderId\": \"order_xxx\",\n  \"razorpayPaymentId\": \"pay_xxx\",\n  \"razorpaySignature\": \"signature_xxx\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/payments/razorpay/verify",
              "host": ["{{base_url}}"],
              "path": ["payments", "razorpay", "verify"]
            }
          }
        },
        {
          "name": "Get Payment",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/payments/{{payment_id}}",
              "host": ["{{base_url}}"],
              "path": ["payments", "{{payment_id}}"]
            }
          }
        },
        {
          "name": "Get Payments by Order",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/payments/order/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["payments", "order", "{{order_id}}"]
            }
          }
        },
        {
          "name": "Get Receipt",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/payments/{{payment_id}}/receipt",
              "host": ["{{base_url}}"],
              "path": ["payments", "{{payment_id}}", "receipt"]
            }
          }
        },
        {
          "name": "Process Refund",
          "request": {
            "method": "POST",
            "header": [{"key": "Content-Type", "value": "application/json"}],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Customer requested refund\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/payments/{{payment_id}}/refund",
              "host": ["{{base_url}}"],
              "path": ["payments", "{{payment_id}}", "refund"]
            }
          }
        }
      ]
    }
  ]
}
